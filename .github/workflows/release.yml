name: Release Charts

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'

env:
  HELM_VERSION: v3.13.3

jobs:
  # Simple validation
  validate:
    runs-on: ubuntu-latest
    outputs:
      charts-exist: ${{ steps.check-charts.outputs.exist }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if charts exist
        id: check-charts
        run: |
          if [[ -d "charts" ]] && [[ $(find charts -name "Chart.yaml" | wc -l) -gt 0 ]]; then
            echo "exist=true" >> "$GITHUB_OUTPUT"
            echo "Found charts to process"
            find charts -name "Chart.yaml" -exec dirname {} \;
          else
            echo "exist=false" >> "$GITHUB_OUTPUT"
            echo "No charts found"
          fi

      - name: Validate chart versions
        if: steps.check-charts.outputs.exist == 'true'
        run: |
          echo "Validating chart versions..."
          for chart in $(find charts -name "Chart.yaml" -exec dirname {} \;); do
            chart_name=$(basename "$chart")
            if [[ -f "$chart/Chart.yaml" ]]; then
              version=$(grep '^version:' "$chart/Chart.yaml" | awk '{print $2}' | tr -d '"')
              echo "Chart: $chart_name, Version: $version"
              
              # Check if this version already exists as a Git tag
              if git tag -l | grep -q "^$chart_name-$version$"; then
                echo "⚠️  WARNING: Version $version for chart $chart_name already exists as a Git tag"
                echo "Consider incrementing the version in $chart/Chart.yaml"
              else
                echo "✅ Version $version for $chart_name is available"
              fi
            fi
          done

  # Release charts
  release:
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.charts-exist == 'true'
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Add helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Create release summary
        run: |
          echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Repository URL: https://$(echo ${{ github.repository }} | cut -d'/' -f1).github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "helm repo add my-repo https://$(echo ${{ github.repository }} | cut -d'/' -f1).github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_STEP_SUMMARY
          echo "helm repo update" >> $GITHUB_STEP_SUMMARY
          echo "helm search repo my-repo" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY