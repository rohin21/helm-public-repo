name: Lint and Test Charts

on:
  pull_request:
    paths:
      - 'charts/**'
  push:
    branches:
      - main

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Add helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: List changed charts
        id: list-changed
        run: |
          # For push events, always check all charts
          if [[ "${{ github.event_name }}" == "push" ]]; then
            if [[ -d "charts" ]] && [[ $(find charts -name "Chart.yaml" | wc -l) -gt 0 ]]; then
              echo "changed=true" >> "$GITHUB_OUTPUT"
              echo "Push event - checking all charts"
            else
              echo "changed=false" >> "$GITHUB_OUTPUT"
            fi
          else
            # For PRs, use chart-testing to detect changes
            changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
            if [[ -n "$changed" ]]; then
              echo "changed=true" >> "$GITHUB_OUTPUT"
              echo "Charts changed:"
              echo "$changed"
            else
              echo "changed=false" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Lint charts
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Lint all charts for push events
            for chart in charts/*/; do
              if [[ -f "$chart/Chart.yaml" ]]; then
                echo "Linting $chart"
                ct lint --charts "$chart"
              fi
            done
          else
            # Use ct list-changed for PRs
            ct lint --target-branch ${{ github.event.repository.default_branch }}
          fi

      - name: Validate chart documentation
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          charts_to_check=""
          if [[ "${{ github.event_name }}" == "push" ]]; then
            charts_to_check=$(find charts -name "Chart.yaml" -exec dirname {} \;)
          else
            charts_to_check=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          fi
          
          for chart in $charts_to_check; do
            if [[ ! -f "$chart/README.md" ]]; then
              echo "⚠️  WARNING: $chart is missing README.md"
              # Don't fail, just warn
            fi
            if [[ ! -f "$chart/Chart.yaml" ]]; then
              echo "ERROR: $chart is missing Chart.yaml"
              exit 1
            fi
            # Check for required fields in Chart.yaml
            if ! grep -q "description:" "$chart/Chart.yaml"; then
              echo "ERROR: $chart/Chart.yaml missing description field"
              exit 1
            fi
            if ! grep -q "version:" "$chart/Chart.yaml"; then
              echo "ERROR: $chart/Chart.yaml missing version field"
              exit 1
            fi
            echo "✅ $chart validation passed"
          done

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install yamllint
        run: pip install yamllint

      - name: Lint YAML files
        run: |
          echo "Linting YAML files with relaxed rules for Helm templates..."
          find charts/ -name "*.yaml" -o -name "*.yml" | xargs yamllint -c lintconf.yaml || true
          echo "YAML linting completed (warnings allowed)"